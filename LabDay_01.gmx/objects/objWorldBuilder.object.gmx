<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>floorMakerSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// set starting variables
global.floorSections=0; // each section usually consists of 4 tiles
global.mapGenerated=0; // is the map built yet, 0=false, 1=true
global.chestSpawns=0; // number of current posibble chest spawn zones
global.floorSectionQuota=110; // max number of floor sections to build, actual number my vary
global.chestSpawnChance=10; // chance to create a chest spawn out of 100%
global.maxChestSpawns=4;  // max number of chest spawners that can be built
global.maxEnemyPower=5;  // max number of enemy power. each enemy entity my be more than 1 power

global.worldTileType=objGrassTile;

// starting direction
dir=1;

// generate and set a random seed
global.universeSeed=script_execute(randomSeedGenerator); // generate seed
random_set_seed(global.universeSeed); // set seed
show_debug_message(global.universeSeed); // spit out seed to console

// generate random position
randX=random_range(256,room_width-256);
randY=random_range(256,room_height-256);

// attach values to 32x32 grid
x=randX-(randX%32);
y=randY-(randY%32);

if(x&lt;32){x=32;}
if(x&gt;room_width-96){x=room_width-96;}
if(y&lt;32){y=32;}
if(y&gt;room_height-96){y=room_height-96;}

// generation speed
room_speed=48;

// place a spawn point if none exist
if(!instance_exists(playerSpawn01)){ instance_create(x,y,playerSpawn01);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// get current position
oDir=dir;

// check if section has been placed here
if(!place_meeting(x,y,global.worldTileType)){
    // generate room
    if(irandom(100)&lt;30){
        // room size
        switch(irandom(2))
        {
            case 0: // small room
            case 1: // medium room
            case 2: // large room
                
                // 3x3 room generation
                // center section
                script_execute(makeTileSection(x,y)); global.floorSections++;
                // left section
                if(!x+32&gt;room_width-64||!place_meeting(x+32,y,global.worldTileType)){
                    script_execute(makeTileSection(x+32,y)); global.floorSections++;}
                // left bottom section
                if(!x+32&gt;room_width-64||!y+32&gt;room_height-64||!place_meeting(x+32,y+32,global.worldTileType)){
                    script_execute(makeTileSection(x+32,y+32)); global.floorSections++;}
                // bottom section
                if(!y+32&gt;room_height-64||!place_meeting(x,y+32,global.worldTileType)){
                    script_execute(makeTileSection(x,y+32)); global.floorSections++;}
                // right bottom section    
                if(!x-32&lt;32||!y+32&gt;room_height-64||!place_meeting(x-32,y+32,global.worldTileType)){
                    script_execute(makeTileSection(x-32,y+32)); global.floorSections++;}
                // right section
                if(!x-32&lt;32||!place_meeting(x-32,y,global.worldTileType)){
                    script_execute(makeTileSection(x-32,y)); global.floorSections++;}
                // top right section
                if(!x-32&lt;32||!y-32&lt;32||!place_meeting(x-32,y-32,global.worldTileType)){
                    script_execute(makeTileSection(x-32,y-32)); global.floorSections++;}
                // top section
                if(!y-32&lt;32||!place_meeting(x,y-32,global.worldTileType)){
                    script_execute(makeTileSection(x,y-32)); global.floorSections++;}
                // top left section
                if(!x+32&gt;room_width-64||!y-32&lt;32||!place_meeting(x+32,y-32,global.worldTileType)){
                    script_execute(makeTileSection(x+32,y-32)); global.floorSections++;}
                
            break;
        }
    }else if(x&gt;32&amp;&amp;x&lt;room_width-64&amp;&amp;y&gt;32&amp;&amp;y&lt;room_height-64){
        script_execute(makeTileSection(x,y));
        global.floorSections++;
    }
}

// once floor sections have been generated
if(global.floorSections&gt;=global.floorSectionQuota){
    // generate walls
    for(i=0;i&lt;instance_number(global.worldTileType);i++){
        temp=instance_find(global.worldTileType,i);
        with(temp){if(place_empty(x+16,y)){with(instance_create(x+16,y,objWallTile)){script_execute(wallTileSpriteSelect);}}}
        with(temp){if(place_empty(x+16,y+16)){with(instance_create(x+16,y+16,objWallTile)){script_execute(wallTileSpriteSelect);}}}
        with(temp){if(place_empty(x,y+16)){with(instance_create(x,y+16,objWallTile)){script_execute(wallTileSpriteSelect);}}}
        with(temp){if(place_empty(x-16,y+16)){with(instance_create(x-16,y+16,objWallTile)){script_execute(wallTileSpriteSelect);}}}
        with(temp){if(place_empty(x-16,y)){with(instance_create(x-16,y,objWallTile)){script_execute(wallTileSpriteSelect);}}}
        with(temp){if(place_empty(x-16,y-16)){with(instance_create(x-16,y-16,objWallTile)){script_execute(wallTileSpriteSelect);}}}
        with(temp){if(place_empty(x,y-16)){with(instance_create(x,y-16,objWallTile)){script_execute(wallTileSpriteSelect);}}}
        with(temp){if(place_empty(x+16,y-16)){with(instance_create(x+16,y-16,objWallTile)){script_execute(wallTileSpriteSelect);}}}
    }
    global.mapGenerated=1; // set map generated to 1 (true)
    instance_destroy(); // remove objWorldBuilder
}

// pick a direction
switch(irandom(6))
{
    case 1:
        dir=1;
        break;
    case 2:
        dir=2;
        break;
    case 3:
        dir=3;
        break;
    case 4:
        dir=4;
        break;
    dir=dir;
}

// place a chest at end of corridor
if(dir+oDir==4||dir+oDir==6){
    if((!instance_exists(objChest01)||distance_to_object(objChest01)&gt;96)){
        if(irandom(99)&lt;global.chestSpawnChance&amp;&amp;global.chestSpawns&lt;global.maxChestSpawns){ 
            instance_create(x,y,objChest01);
            global.chestSpawnChance=10;
            global.chestSpawns++;
        }else if(global.chestSpawns&lt;global.maxChestSpawns){
            global.chestSpawnChance+=5;
        }
    }
}

switch(dir)
{
    case 1:
        x+=32; // right
        break;
    case 2:
        y+=32; // down
        break;
    case 3:
        x-=32; // left
        break;
    case 4:
        y-=32; // up
        break;
}
// check within room
if(x&lt;32){x=32;}
if(x&gt;room_width-96){x=room_width-96;}
if(y&lt;32){y=32;}
if(y&gt;room_height-96){y=room_height-96;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
